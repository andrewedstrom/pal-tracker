---
resource_types:
- name: google-cloud-storage
  type: docker-image
  source:
    repository: frodenas/gcs-resource

resources:
- name: pal-tracker
  type: git
  source:
    uri: ((blue-pal-tracker/Notes/github-repository))
    branch: blue
    private_key: ((blue-pal-tracker/Notes/github-private-key))

- name: pal-tracker-artifacts
  type: google-cloud-storage
  source:
    bucket: triage-pal-tracker
    regexp: blue/releases/pal-tracker-(.*).jar
    json_key: ((blue-pal-tracker/Notes/triage-pal-tracker-bucket-gcp-key))

- name: version
  type: semver
  source:
    driver: gcs
    bucket: triage-pal-tracker
    key: blue/versions/version
    json_key: ((blue-pal-tracker/Notes/triage-pal-tracker-bucket-gcp-key))

- name: review-deployment
  type: cf
  source:
    api: https://api.run.pivotal.io
    username: ((PWS: App Deployment Account/Username))
    password: ((PWS: App Deployment Account/Password))
    organization: Davos
    space: blue-review

- name: production-deployment
  type: cf
  source:
    api: https://api.run.pivotal.io
    username: ((PWS: App Deployment Account/Username))
    password: ((PWS: App Deployment Account/Password))
    organization: Davos
    space: blue

jobs:
- name: build
  plan:
  - get: pal-tracker
    trigger: true
  - get: version
    params: {bump: patch}
  - task: build and test
    file: pal-tracker/ci/build.yml
  - put: pal-tracker-artifacts
    params:
      file: build-output/pal-tracker-*.jar
  - put: version
    params:
      file: version/number

- name: deploy-review
  plan:
  - get: pal-tracker
    passed: [build]
  - get: pal-tracker-artifacts
    trigger: true
    passed: [build]
  - task: migrate database
    file: pal-tracker/ci/migrateDatabase.yml
    params:
      CF_API_URL: https://api.run.pivotal.io
      CF_USERNAME: ((PWS: App Deployment Account/Username))
      CF_PASSWORD: ((PWS: App Deployment Account/Password))
      CF_ORG: Davos
      CF_SPACE: blue-review
      MYSQL_IP: ((blue-pal-tracker/Notes/review-mysql-ip))
      DATABASE_NAME: ((blue-pal-tracker/Notes/review-database-name))
      DATABASE_USERNAME: ((blue-pal-tracker/Notes/review-database-username))
      DATABASE_PASSWORD: ((blue-pal-tracker/Notes/review-database-password))
  - put: review-deployment
    params:
      manifest: pal-tracker/manifest-review.yml
      path: pal-tracker-artifacts/pal-tracker-*.jar
      environment_variables:
        WELCOME_MESSAGE: "Hello from the review environment"

- name: deploy-production
  plan:
  - get: pal-tracker
    passed: [deploy-review]
  - get: pal-tracker-artifacts
    passed: [deploy-review]
  - task: migrate database
    file: pal-tracker/ci/migrateDatabase.yml
    params:
      CF_API_URL: https://api.run.pivotal.io
      CF_USERNAME: ((PWS: App Deployment Account/Username))
      CF_PASSWORD: ((PWS: App Deployment Account/Password))
      CF_ORG: Davos
      CF_SPACE: blue
      MYSQL_IP: ((blue-pal-tracker/Notes/prod-mysql-ip))
      DATABASE_NAME: ((blue-pal-tracker/Notes/production-database-name))
      DATABASE_USERNAME: ((blue-pal-tracker/Notes/production-database-username))
      DATABASE_PASSWORD: ((blue-pal-tracker/Notes/production-database-password))
  - put: production-deployment
    params:
      manifest: pal-tracker/manifest-production.yml
      path: pal-tracker-artifacts/pal-tracker-*.jar
      environment_variables:
        WELCOME_MESSAGE: "Hello from the production environment"